- Class: meta
  Course: scRNA-seq
  Lesson: PCA
  Author: Matthew Moss
  Type: Standard
  Organization: 
  Version: 2.4.5

- Class: text
  Output: In order to properly explore our data, it is important to reduce the dimensionality of the dataset. Doing this allows to to see the most important things that differentiate our cell types, and will later allow us to cluster the data
  
- Class: text
  Output: We will be reducing our data based on the features with the greatest variability, which will be done via principle component analysis (PCA)
  
- Class: text
  Output: By reducing our data into the principle component space, we can explore what genes contribute the most to the differences between all of our cells
  
- Class: cmd_question
  Output: Seurat makes it easy for us to do PCA by providing the RunPCA() function. Use this function on our pbmc object (already in your environment). Set the features flag equal to the VariableFeatures() of your pbmc data, and save the output to your pbmc object
  CorrectAnswer: pbmc <- RunPCA(pbmc, features = VariableFeatures(pbmc))
  AnswerTests: omnitest(correctExpr =' pbmc <- RunPCA(pbmc, features = VariableFeatures(pbmc))')
  Hint: You'll need to nest the VariableFeatures() function in your RunPCA() function under the features flag
  
- Class: text
  Output: Now that we have calculate the PCs and projected our cells into that space, let's take a look at what genes provide the most variability to our dataset
  
- Class: text
  Output: We can start by creating a dot plot of the dimensional loading of the top genes for each component. This will tell us what genes most contribute to each principle component, which can be useful later on for identifying how different cells separate from each other in that space
  
- Class: cmd_question
  Output: Let's take a look at this using the VizDimLoadings() function on our pbmc data. For now, let's only look at the first 2 principle components by setting the dims flag to 1:2
  CorrectAnswer: VizDimLoadings(pbmc, dims = 1:2)
  AnswerTests: omnitest(correctExpr = 'VizDimLoadings(pbmc, dims = 1:2)')
  Hint: Make sure to only look at the first two dimensions!
  
- Class: text
  Output: We can also visualize all of our cells in the PC space, to see if there is any visible structure in our data and how the cells relate to each other
  
- Class: cmd_question
  Output: Use the DimPlot() function to view your pbmc data in the principle component space. Make sure to set the reduction flag equal to 'pca'
  CorrectAnswer: DimPlot(pbmc, reduction = 'pca')
  AnswerTests: omnitest(correctExpr = 'DimPlot(pbmc, reduction = "pca")')
  Hint: Don't forget to set your reduction flag to "pca"!
  
- Class: text
  Output: If your DimPlot worked properly, you should be able to see 3 large groups of cells in your data. This grouping isn't especially meaningful now, but can help provide a sanity check after you've done your clustering.
  
- Class: text
  Output: Congrats! You have now performed your first dimensionality reduction on single cell data. The next lesson will teach you how to cluster it, so that you can find meaningful differences between cell types. See you there!
